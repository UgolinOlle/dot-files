# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# --- PATHS --------------------------------------------------------------------------------------------------------- #

export ZSH="$HOME/.oh-my-zsh"
export PATH="/usr/local/bin:/opt/homebrew/bin:$PYENV_ROOT/bin:$HOME/Library/Python/3.9/bin:$HOME/bin:$HOME/.cargo/bin:$HOME/.nvm/versions/node/v18.20.4/lib:$HOME/.composer/vendor/bin:$HOME/.local/bin:/opt/homebrew/opt/postgresql@15/bin:$HOME/.pub-cache/bin:$PATH"
export NVM_DIR="$HOME/.nvm"
export XDG_CONFIG_HOME="/Users/uolle/.config"

# --- NVM ----------------------------------------------------------------------------------------------------------- #

# NVM Setup
if [ -s "/opt/homebrew/opt/nvm/nvm.sh" ]; then
  source "/opt/homebrew/opt/nvm/nvm.sh"
  [ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && source "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"
fi

# --- THEMES -------------------------------------------------------------------------------------------------------- #

# -- Oh my posh
# eval "$(oh-my-posh init zsh --config ~/Developer/dotfiles/oh-my-posh/themes/clean-detailed.omp.json)"

# space
# cloud-context

# -- Zsh theme
# export ZSH_THEME="imp"

# simplerich

# --- PLUGINS ------------------------------------------------------------------------------------------------------- #

plugins=(
  git
  brew
  colorize
  npm
  nvm
  zsh-syntax-highlighting
  zsh-autosuggestions
  zsh-autocomplete
  colored-man-pages
)

# --- ZSH ----------------------------------------------------------------------------------------------------------- #

source $ZSH/oh-my-zsh.sh

# --- Load additional scripts conditionally
if [ -f /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh ]; then
  source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
fi

# --- ALIASES ------------------------------------------------------------------------------------------------------- #

# --- Misc
alias cls=clear
alias rl="source ~/.zshrc"
alias rm="trash"
alias cat="bat"
alias grep="grep --color=auto"
alias ports="lsof -i -P -n | grep LISTEN"
alias kport="kill -9 \$(lsof -t -i:"
alias no="neofetch"

# --- Paths
alias dv="cd ~/Developer"
alias dd="cd ~/Documents"
alias dw="cd ~/Downloads"
alias wh="cd ~/Developer/whoa-studio/"
alias conf="cd ~/.config"
alias h="cd ~"
alias ..="cd .."

# --- List
alias lt='eza --tree --level=2 --long --icons --git'
alias lta='lt -a'
alias ll="eza --color=always --long --git --icons=always"
alias ls="eza --color=always --long --git --no-filesize --icons=always --no-user --no-permissions --no-time"

# --- Brew
alias bu="brew uninstall"
alias bi="brew install"
alias bic="brew install --cask"
alias bp="brew update && brew upgrade && brew autoremove && brew cleanup && brew doctor"
alias bs="brew services"

# --- Docker
alias d="docker"
alias ld="lazydocker"
alias da="docker start"
alias dx="docker exec -it"
alias dc="docker compose"
alias dl="docker ps -a"
alias drs="docker compose down && docker compose up"

# --- Kubernetes
alias k="kubectl"
alias kgp="kubectl get pods"
alias kgsvc="kubectl get svc"
alias kd="kubectl describe"
alias kl="kubectl logs"
alias kns="kubectl config set-context --current --namespace"

# --- Git
alias g="git"
alias lg="lazygit"

# --- Neovim
alias n="nvim"
alias nv="nvim"
alias vim="nvim"
alias vi="nvim"
alias nz="nv ~/.zshrc"
alias snv="sudo nvim"
alias nenv="nv .env"

# --- NPM
alias ni="npm install"
alias nu="npm uninstall"
alias nl="npm list"
alias nr="npm run"
alias nc="rm -rf node_modules && npm cache clean --force"

# --- YARN
alias y="yarn"
alias ya="yarn add"

# --- Database
alias db="harlequin --config-path $HOME/.config/.harlequin.toml"

# --- Networking
alias ports="lsof -i -P -n | grep LISTEN"

# --- FUNCTIONS ----------------------------------------------------------------------------------------------------- #

# --- Create a Next.js app with custom parameters
function next_app() {
  if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Usage: next_app <app-name> <git-remote-url>"
    return 1
  fi
  npx create-next-app@latest "$1" --ts --tailwind --eslint --app --src-dir --use-yarn --turbo --yes
  cd "$1" || return
  git remote add origin "$2"
}

# --- Restart GPG agent
function rgpg() {
  gpgconf --kill gpg-agent
  gpgconf --launch gpg-agent
}

# --- Docker run shortcut
function drun() {
  if [ -z "$1" ]; then
    echo "Usage: drun <image-name>"
    return 1
  fi
  docker run -it "$1"
}

# --- Docker build shortcut
function dbuild() {
  if [ -z "$1" ]; then
    echo "Usage: dbuild <Dockerfile-path> [image-name]"
    return 1
  fi
  docker build -t "${2:-my-image}" "$1"
}

# --- Find running process
function find_process() {
  if [ -z "$1" ]; then
    echo "Usage: find_process <keyword>"
    return 1
  fi
  ps aux | grep "$1" | grep -v "grep"
}

# --- Check an URL
function check_url() {
  if [ -z "$1" ]; then
    echo "Usage: check_url <url>"
    return 1
  fi
  curl -Is "$1" | head -n 1
}

# --- Compress a folder / file
function compress() {
  if [ -z "$1" ] || [ -z "$2" ]; then
    echo "Usage: compress <source-folder> <destination-archive>"
    return 1
  fi
  tar -czvf "$2".tar.gz "$1"
  echo "Folder $1 compressed into $2.tar.gz"
}

# --- Uncompress a folder / file
function decompress() {
  if [ -z "$1" ]; then
    echo "Usage: decompress <archive-file>"
    return 1
  fi
  tar -xzvf "$1"
  echo "Archive $1 decompressed."
}

# --- COMPLETIONS ---------------------------------------------------------------------------------------------------- #

# -- Global completion
fpath=(~/.zsh/completions $fpath)

# -- Dart completion
[[ -f /Users/uolle/.dart-cli-completion/zsh-config.zsh ]] && . /Users/uolle/.dart-cli-completion/zsh-config.zsh || true

# -- Ngrok completion
if command -v ngrok &>/dev/null; then
  eval "$(ngrok completion)"
fi

# --- MISCELLANEOUS -------------------------------------------------------------------------------------------------- #

# -- Source powerlevel10k
source /opt/homebrew/share/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
